name: Deploy WAR to Tomcat (EC2 via SSH)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build WAR
        run: mvn -B -DskipTests package

      - name: Find WAR (multi-module safe)
        run: |
          WAR=$(find . -type f -name "*.war" ! -name "original-*.war" | head -n1)
          if [ -z "$WAR" ]; then
            echo "No WAR built. Is packaging <war> in your pom.xml?" >&2
            exit 1
          fi
          echo "WAR=$WAR" >> $GITHUB_ENV
          echo "WAR_BASENAME=$(basename "$WAR")" >> $GITHUB_ENV
          echo "Found WAR: $WAR"

      - name: Copy WAR to EC2:/tmp (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          source: ${{ env.WAR }}
          target: /tmp/
          overwrite: true
          debug: true

      - name: Hot deploy into Tomcat
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          script: |
            set -euo pipefail
            CONTAINER=tomcat
            WEBAPPS=/usr/local/tomcat/webapps
            WAR="/tmp/${{ env.WAR_BASENAME }}"
            NAME="$(basename "$WAR" .war)"

            echo "Check uploaded WAR:"
            ls -l "$WAR"

            # 起動してなければTomcat起動
            if ! docker ps --format '{{.Names}}' | grep -qx "$CONTAINER"; then
              docker run -d --name "$CONTAINER" -p 80:8080 --restart unless-stopped tomcat:9.0-jdk17-temurin
              docker exec "$CONTAINER" bash -lc 'cp -R /usr/local/tomcat/webapps.dist/ROOT /usr/local/tomcat/webapps/' || true
            fi

            # 既存アプリ削除→新WAR配置（自動展開を待つ）
            docker exec "$CONTAINER" bash -lc "rm -rf $WEBAPPS/$NAME $WEBAPPS/$NAME.war"
            docker cp "$WAR" "$CONTAINER:$WEBAPPS/"
            echo "Deployed $WAR -> $WEBAPPS/ (autoDeploy)"
